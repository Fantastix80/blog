---
import { getCollection } from 'astro:content'
import { postsSort } from '~/lib/utils'
import Layout from '~/layouts/Layout.astro'
import NoImage from '~/components/posts/layouts/NoImage.astro'
import Horizontal from '~/components/posts/layouts/Horizontal.astro'
import Vertical from '~/components/posts/layouts/Vertical.astro'
import PostNavigation from '~/components/posts/base/PostNavigation.astro'
import PostFeatures from '~/components/posts/toc/PostFeatures.astro'

export async function getStaticPaths() {
  const posts = (await getCollection('posts')).filter((post) => !post.data.draft)

  return posts.flatMap((post, index, arr) => {
    return ['fr', 'en'].map((lang) => ({
      params: { lang, slug: post.slug },
      props: {
        post,
        posts: arr,
        prev: index + 1 < arr.length ? arr[index + 1] : null,
        next: index > 0 ? arr[index - 1] : null,
        lang,
      },
    }))
  })
}

const { post, posts, prev, next, lang } = Astro.props
const { data: frontmatter } = post
const { Content, headings, remarkPluginFrontmatter } = await post.render()

const hasValidHeadings = headings.length > 1
const hasImage = !!frontmatter.heroImage
const isVertical = frontmatter.heroImageAspectRatio === '3/4'

const layoutMap = {
  'no-image': NoImage,
  'vertical': Vertical,
  'horizontal': Horizontal,
}
const layoutKey = !hasImage ? 'no-image' : isVertical ? 'vertical' : 'horizontal'
const PostLayout = layoutMap[layoutKey]
---

<Layout
  title={frontmatter.title}
  description={frontmatter.description || frontmatter.title}
  image={frontmatter.ogImage}
>
  <div class="fullPage relative flex flex-col justify-between">
    <PostLayout {frontmatter} minutesRead={remarkPluginFrontmatter.minutesRead}>
      <Content />
    </PostLayout>
    <div class="px-6 sm:px-8 pb-6 sm:pb-8">
      {posts.length > 1 && <PostNavigation {prev} {next} lang={lang} />}
    </div>
    {hasValidHeadings && <PostFeatures {post} {posts} {headings} lang={lang} />}
  </div>
</Layout>
